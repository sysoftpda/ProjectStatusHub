# ====================================================================
# N√°zev skriptu : vytvor_hub.ps1
# √öƒçel          : Vytvo≈ô√≠ strukturu pro Project Status Hub a inicializaƒçn√≠ skripty
#
# ‚ú¶ Funkce:
#   - Vytvo≈ô√≠ slo≈æky: modules, scripts, data, status
#   - Vygeneruje z√°kladn√≠ .ps1 a .psm1 soubory s hlaviƒçkami
#   - Prohled√° sousedn√≠ adres√°≈ôe a ulo≈æ√≠ seznam git repozit√°≈ô≈Ø
#
# Autor         : Petr Kroƒça
# Vytvo≈ôeno     : 2025-06-24
# ====================================================================

# === P≈ôepnut√≠ do PowerShell 7, pokud bƒõ≈æ√≠me v PowerShell 5 ===
if ($PSVersionTable.PSVersion.Major -lt 7) {
    $pwshPath = "$env:ProgramFiles\PowerShell\7\pwsh.exe"
    if (Test-Path $pwshPath) {
        Write-Host "‚öôÔ∏è P≈ôep√≠n√°m do PowerShell 7 ($pwshPath)..." -ForegroundColor Cyan
        & $pwshPath -NoLogo -NoProfile -File $PSCommandPath
        exit
    } else {
        Write-Warning "‚ùå PowerShell 7 nebyl nalezen na $pwshPath"
        Write-Host "‚ö†Ô∏è Doporuƒçeno: st√°hni jej z https://aka.ms/pwsh"
        Write-Host "`n[Enter] pro n√°vrat..." -ForegroundColor DarkGray
        [void][System.Console]::ReadLine()
        exit
    }
}

$root = $PSScriptRoot
$subFolders = "modules", "scripts", "data", "status"

foreach ($f in $subFolders) {
    $path = Join-Path $root $f
    if (-not (Test-Path $path)) {
        New-Item $path -ItemType Directory | Out-Null
        Write-Host "‚úÖ Vytvo≈ôeno: $f" -ForegroundColor Green
    }
}

# -- Vytvo≈ôen√≠ soubor≈Ø se z√°kladn√≠ hlaviƒçkou --

$files = @{
    "scripts\menu.ps1" = @"
# ====================================================================
# N√°zev skriptu : menu.ps1
# √öƒçel          : Interaktivn√≠ p≈ôehled a spr√°va v√≠ce Git projekt≈Ø
#
# ‚ú¶ Funkce:
#   - Zobrazuje seznam zn√°m√Ωch projekt≈Ø
#   - Zobrazuje status (nap≈ô. rozpracov√°no, commitnuto)
#   - Umo≈æ≈àuje spustit start/end/confirm skripty pro dan√Ω projekt
#
# Autor         : Petr Kroƒça
# Vytvo≈ôeno     : 2025-06-24
# ====================================================================

"@;

    "scripts\start_project.ps1" = @"
# ====================================================================
# N√°zev skriptu : start_project.ps1
# √öƒçel          : Spu≈°tƒõn√≠ pr√°ce na konkr√©tn√≠m projektu (ulo≈æen√≠ snapshotu)
#
# ‚ú¶ Funkce:
#   - Ovƒõ≈ô√≠ Git repozit√°≈ô
#   - Ulo≈æ√≠ snapshot startovn√≠ verze
#   - Zaznamen√° zaƒç√°tek pr√°ce v status.json
#
# Autor         : Petr Kroƒça
# Vytvo≈ôeno     : 2025-06-24
# ====================================================================

"@;

    "scripts\end_project.ps1" = @"
# ====================================================================
# N√°zev skriptu : end_project.ps1
# √öƒçel          : Ulo≈æ√≠ snapshot po pr√°ci a p≈ôiprav√≠ commit summary
#
# ‚ú¶ Funkce:
#   - Porovn√° se start snapshotem
#   - Zaznamen√° zmƒõny a p≈ôiprav√≠ commit_summary.md
#
# Autor         : Petr Kroƒça
# Vytvo≈ôeno     : 2025-06-24
# ====================================================================

"@;

    "scripts\confirm_project.ps1" = @"
# ====================================================================
# N√°zev skriptu : confirm_project.ps1
# √öƒçel          : Potvrzen√≠ a odesl√°n√≠ commit zmƒõn vybran√©ho projektu
#
# ‚ú¶ Funkce:
#   - Naƒçte commit_summary.md
#   - Zept√° se na potvrzen√≠ a provede git commit + push
#
# Autor         : Petr Kroƒça
# Vytvo≈ôeno     : 2025-06-24
# ====================================================================

"@;

    "modules\RepoStatus.psm1" = @"
# ====================================================================
# N√°zev souboru : RepoStatus.psm1
# √öƒçel          : Spr√°va seznamu projekt≈Ø a jejich stav≈Ø
#
# ‚ú¶ Funkce:
#   - Get-RepoList
#   - Add-Repo
#   - Update-RepoStatus
#   - Load-Status / Save-Status
#
# Autor         : Petr Kroƒça
# Vytvo≈ôeno     : 2025-06-24
# ====================================================================

"@
}

foreach ($entry in $files.GetEnumerator()) {
    $filePath = Join-Path $root $entry.Key
    if (-not (Test-Path $filePath)) {
        $entry.Value | Set-Content -Path $filePath -Encoding UTF8
        Write-Host "üìÑ Vytvo≈ôen soubor: $($entry.Key)" -ForegroundColor Cyan
    }
}

# -- Prohled√°n√≠ okoln√≠ch slo≈æek a sestaven√≠ seznamu projekt≈Ø --

$parent = Split-Path $root -Parent
# Vynucen√© pole pomoc√≠ statick√©ho [object[]] p≈ôetypov√°n√≠
$repoList = @()

Get-ChildItem -Path $parent -Directory | Where-Object {
    $hasGit = Test-Path "$($_.FullName)\.git"
    $ignored = Test-Path "$($_.FullName)\noGIT"
    return $hasGit -and (-not $ignored)
} | ForEach-Object {
    $repoList += [PSCustomObject]@{
        Nazev = $_.Name
        Cesta = $_.FullName
        Stav  = "‚è≥ Bez akce"
        PosledniZmena = $null
    }
}

# üí° Zde vytvo≈ô√≠me generic list, kter√Ω ConvertTo-Json nezamƒõn√≠ za objekt
$typedList = New-Object 'System.Collections.Generic.List[Object]'
$repoList | ForEach-Object { [void]$typedList.Add($_) }

$typedList | ConvertTo-Json -Depth 2 -AsArray | Set-Content "$root\data\repos.json" -Encoding UTF8
Write-Host "`nüì¶ Detekov√°no projekt≈Ø: $($typedList.Count) ‚Üí ulo≈æeno do data\repos.json" -ForegroundColor Yellow

Write-Host "`n‚úÖ Project Status Hub p≈ôipraven!" -ForegroundColor Green
Write-Host "`n[Enter] pro ukonƒçen√≠..." -ForegroundColor DarkGray
[void][System.Console]::ReadLine()